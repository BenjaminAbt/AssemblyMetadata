using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;
using System;
using System.Text;

namespace BenjaminAbt.AssemblyMetadata
{
    /// <summary>
    /// Source Code Generator of AssemblyMetadata
    /// </summary>
    [Generator]
    public class AssemblyMetadataGenerator : ISourceGenerator
    {
        public void Execute(GeneratorExecutionContext context)
        {
            // vars
            DateTimeOffset buildOn = DateTimeOffset.UtcNow;

            /***************** VISUAL STUDIO RESTART REQUIRED ON CHANGE ********************/
            // https://github.com/dotnet/roslyn/issues/48083
            const string _source = @"// <auto-generated />

namespace BenjaminAbt.AssemblyMetadata
{
    internal static class AssemblyMetadataInfo
    {
        public static class BuildInfo
        {
            /// <summary>
            /// Build time as UTC ISO8601
            /// </summary>
            public const string BuildTimestamp = ""%BUILD_ISO8601%"";

            public const int BuildDateYear = %BUILD_DATE_YEAR%;
            public const int BuildDateMonth = %BUILD_DATE_MONTH%;
            public const int BuildDateDay = %BUILD_DATE_DAY%;

            public const int BuildTimeHour = %BUILD_TIME_HOUR%;
            public const int BuildTimeMinute = %BUILD_TIME_MINUTE%;
            public const int BuildTimeSecond = %BUILD_TIME_SECOND%;
        }
    }
}
";
            /***************** VISUAL STUDIO RESTART REQUIRED ON CHANGE ********************/

            // replace
            StringBuilder sourceBuilder = new StringBuilder(_source)

                .Replace("%BUILD_ISO8601%", buildOn.ToString("o"))

                .Replace("%BUILD_DATE_YEAR%", buildOn.Year.ToString())
                .Replace("%BUILD_DATE_MONTH%", buildOn.Month.ToString())
                .Replace("%BUILD_DATE_DAY%", buildOn.Day.ToString())

                .Replace("%BUILD_TIME_HOUR%", buildOn.Hour.ToString())
                .Replace("%BUILD_TIME_MINUTE%", buildOn.Minute.ToString())
                .Replace("%BUILD_TIME_SECOND%", buildOn.Second.ToString());

            // generate
            context.AddSource("AssemblyMetadataInfo.gen.cs", SourceText.From(sourceBuilder.ToString(), Encoding.UTF8));
        }

        /// <summary>
        /// <inheritdoc/>
        /// </summary>
        public void Initialize(GeneratorInitializationContext context) { }
    }
}